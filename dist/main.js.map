{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,yCAAyC,0CAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,8CAA8C,0CAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,yCAAyC,6CAAe;AAC/D,0BAA0B,kDAAoB;AAC9C,IAAI,oDAAsB;AAC1B;AACA;;;AAGO,2BAA2B,gDAAkB,YAAY,0CAAY;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA,0FAA0F,SAAS,SAAS,qBAAqB,IAAI,aAAa;AAClJ;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;UC/DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN6B;AACF;AAC3B;AACA;AACA;;AAEA,gBAAgB,+CAAiB,CAAC,6CAAe;;AAEjD;AACA;AACA,IAAI,+CAAiB;AACrB,CAAC;;AAED;AACA,IAAI,6CAAe;AACnB,kBAAkB,0CAAY;;AAE9B;AACA;AACA,MAAM;AACN;AACA;;AAEA,IAAI,2CAAa;AACjB,IAAI,sCAAQ;AACZ,C","sources":["webpack://weather-app/./src/UI.js","webpack://weather-app/./src/app.js","webpack://weather-app/webpack/bootstrap","webpack://weather-app/webpack/runtime/define property getters","webpack://weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://weather-app/webpack/runtime/make namespace object","webpack://weather-app/./src/index.js"],"sourcesContent":["import * as app from './app'\n\nconst cityName = document.getElementById('city-name');\nconst weatherDescription = document.getElementById('weather-description');\nconst weatherIcon = document.getElementById('weather-icon');\nconst temperature = document.getElementById('temperature');\nconst feelsLike = document.getElementById('feels-like');\nconst humidity = document.getElementById('humidity');\nconst windSpeed = document.getElementById('wind-speed');\n\nconst ICON_MAP = {\n    '01d': 'sunny',\n    '01n': 'clear_night',\n    '02d': 'partly_cloudy_day',\n    '02n': 'partly_cloudy_night',\n    '03d': 'cloudy',\n    '03n': 'cloudy',\n    '04d': 'cloudy',\n    '04n': 'cloudy',\n    '09d': 'rainy',\n    '09n': 'rainy',\n    '10d': 'rainy',\n    '10n': 'rainy',\n    '11d': 'thunderstorm',\n    '11n': 'thunderstorm',\n    '13d': 'weather_snowy',\n    '13n': 'weather_snowy',\n    '50d': 'foggy'\n}\n\n\nconst Units = {\n    formatTemp: function (value, units = app.getUnits()) {\n        if (units === 'metric') {\n            return Math.round(value - 273.15) + '째C';\n        }\n        if (units === 'imperial') {\n            return Math.round((value - 273.15) * 9 / 5 + 32) + '째F'\n        }\n    },\n    formatWindSpeed: function (value, units = app.getUnits()) {\n        if (units === 'metric') {\n            return Math.round(value) + 'm/s'\n        }\n        if (units === 'imperial') {\n            return Math.round(value * 2.237) + 'mph'\n        }\n    }\n}\n\nexport async function fetchAndRender(location = app.getLocation()) {\n    const dataRaw = await app.fetchWeatherData(location);\n    app.processWeatherData(dataRaw);\n    renderData();\n}\n\n\nexport function renderData(data = app.getWeatherData(), units = app.getUnits()) {\n\n    cityName.textContent = data.city_name;\n    weatherDescription.textContent = data.weather_description;\n    weatherIcon.textContent = ICON_MAP[data.icon];\n    temperature.textContent = Units.formatTemp(data.temp);\n    feelsLike.textContent = Units.formatTemp(data.feels_like);\n    humidity.textContent = data.humidity + ' %';\n    windSpeed.textContent = Units.formatWindSpeed(data.wind_speed);\n}\n","const OPEN_WEATHER_API_KEY = 'de1ae8be874eb1bb11a00f17c0a6adf0';\n\nconst LOCAL_STORAGE_UNITS_KEY = 'weather.units';\nconst LOCAL_STORAGE_LOCATION_KEY = 'weather.location';\n\nlet units = localStorage.getItem(LOCAL_STORAGE_UNITS_KEY) || 'metric';\nlet location = localStorage.getItem(LOCAL_STORAGE_LOCATION_KEY) || 'saint petersburg';\nlet weatherData = null;\n\nexport async function fetchWeatherData(location = getLocation()) {\n    try {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${OPEN_WEATHER_API_KEY}`, {mode: 'cors'});\n        if(!response.ok) {\n            alert(`Location \"${location}\" not found`);\n            return;\n        }\n        const weatherData = await response.json();\n        setLocation(location);\n        save();\n        return weatherData;\n    } catch (err) {\n        alert(err)\n    }\n}\n\nexport function getWeatherData() {\n    return weatherData;\n}\n\nexport function processWeatherData(data) {\n    weatherData = {\n        city_name: data.name,\n        feels_like: Math.round(data.main.feels_like),\n        humidity: data.main.humidity,\n        temp: Math.round(data.main.temp),\n        temp_max: data.main.temp_max,\n        temp_min: data.main.temp_min,\n        weather_description: data.weather[0].description,\n        weather_title: data.weather[0].main,\n        icon: data.weather[0].icon,\n        wind_speed: data.wind.speed\n    }\n}\n\nexport function getUnits() {\n    return units;\n}\n\nexport function toggleUnits() {\n    units = (units === 'metric') ? 'imperial' : 'metric';\n}\n\nexport function getLocation () {\n    return location;\n}\n\nexport function setLocation (newLocation) {\n    location = newLocation;\n}\n\nexport function save() {\n    localStorage.setItem(LOCAL_STORAGE_UNITS_KEY, units);\n    localStorage.setItem(LOCAL_STORAGE_LOCATION_KEY, location);\n}\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as app from \"./app\";\nimport * as UI from \"./UI\";\nconst searchForm = document.getElementById('search-form');\nconst changeUnitsBtn = document.getElementById('change-units-btn');\nconst searchField = document.getElementById('search-field');\n\nwindow.onload = UI.fetchAndRender(app.getLocation());\n\nsearchForm.addEventListener('submit', function (e){\n    e.preventDefault();\n    UI.fetchAndRender(searchField.value);\n})\n\nchangeUnitsBtn.onclick = function () {\n    app.toggleUnits()\n    const units = app.getUnits()\n\n    if (units === 'metric') {\n        changeUnitsBtn.textContent = 'Display 째F'\n    } else {\n        changeUnitsBtn.textContent = 'Display 째C'\n    }\n\n    UI.renderData()\n    app.save();\n}"],"names":[],"sourceRoot":""}